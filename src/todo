TAGS FOR EVENTS
ex: carousing/tourism, misfortune

1 - disaster - and roll again with [-]
2-7 - mishap
8-13 - weather
14â€“19 - tourism
20 - discovery - and roll again with [+]

CONDITIONS become permanent environmental modifier that modifies the basic rules of the area
Transient conditions/weather get moved into events table

DISCOVERIES have special denizens/events/resources (but lower amounts than environments)

---

REFACTORS:
-separate charactersheet/cards components into subfolders (modals, cards, etc.)
-turn item mods into properties

scene imports top level location modifiers and props(?) from list
"save scene" functionality, saves to list of scenes
in parallel with save worldstate
scenes can contain hyperlink choices like props, choices can lead to other scenes,
and props can lead to scenes
zones as subtype of environments

challenge mode: scene combines flavor text from all included props into a description

-SRDCAT icon leads to home screen
-Change persona only from home screen

---

When items appear in character inventory, add "craft" icon with modal that allows players to add modifiers?

ModalCreatureEdit

---

Replace toasted notes with modals that close after 1s

---

SCENES
scenes have:
-a set (where is it located, what is the environment)
-actors (list of creatures, like an encounter)
-props (new category)
-results (how does the scene conclude/what are the consequences)

-SCENES CAN BE MORE GENERIC, AND PULL OBJECTS FROM EXPEDITIONS IN ORDER TO POPULATE
--"build scene" button?
-scenes pull objects from above (from the expedition's list) and below (props) that match the scene's tags

conditions as props?

A SESSION IS NOT A PLACE, A SESSION IS A DATA STRUCTURE THAT HOLDS ALL DATA NEEDED FOR A PERIOD OF TIME
-aka sessions are the analogue for character sheets
-TCs build a session the way PCs build a character
SESSIONS DON'T HAVE ZONES, THEY HAVE ENVIRONMENTS (THE DATA COLLECTIONS THEY PULL FROM IN ORDER TO GENERATE RESULTS/BUILD SCENES)
-the Expedition data type becomes an Environment
-zones are merged into environments
-TC chooses an environment from a drop down (?) on world sheet
-from there, TC can choose to auto-build a scene based on environment/scene logic, or to manually build it

tags for social/physical/spiritual
build by tag
modifiers
generator adds modifiers to creatures

---

COMMAND LINE
-actions can generate snippets of pseudocode that dms and players can share
-inputting the pseudocode into the command line will cause an action
-ex: creature attacks player, which generates pseudocode:
damage 10, save tho 18
dm sends pseudocode to player
player inputs into their command line:
SRDcat immediately subtracts 10 from their life and rolls a tho save with target 18
-CAN BE UPGRADED TO WEBSOCKET EVENTS

examples:
damage 10, save tho 18: damage 3
function splits by ", " to determine individual actions
then splits by keywords like "or" or "else" (or most likely ": ") to determine conditionals
then splits by " " to parse for functions and parameters
special function words like "damage" or "save" trigger specific functions
words after functions words are treated as parameters

THIS MEANS THE APP CAN RUN ITS OWN PSEUDOCODE COMMANDS
for instance, as random roll result

DONEZO LINE ---------------------------------------------------------------------------------

PERSONAS
-TC or player
-will help transition to websockets
-button next to SRDCAT title swaps between?

TC: worldstate available instead of character sheet
-skills/traits/spells are not invisible
-locations/props are visible

CARD DISPLAY MODAL: literally a modal that contains a functional card (harvest from CardList?)
table: if (typeof result === "object") {display card modal}
this way, tables can properly link to other cards without disrupting the user's place

TABLE DISPLAY MODAL: TABLES HAVE BUTTON OPTION THAT OPENS MODAL TO DISPLAY THE TABEL AS A LIST

-remove "data" step from object json lists
-expeditions turned into environments

-bug where linklet icon wouldn't reflect sheet -> collections change fixed

Change creature life (lifecurrent) into modifiable amount via a modal
